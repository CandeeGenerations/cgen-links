type Link {
  title: String!
  destination: String!
  description: String
  addedTs: String!
  active: Boolean!
  deleted: Boolean!
  clicks: [Click] @relation
  owner: User!
  order: Int
}

type Click {
  clickedTs: String!
  ipAddress: String
  language: String
  userAgent: String
  country: String
  region: String
  city: String
  owner: Link!
}

type Settings {
  slug: String!
  logoUrl: String
  primaryColor: String
  secondaryColor: String
  useGradient: Boolean
  facebook: String
  instagram: String
  twitter: String
  youtube: String
  owner: User!
}

type User {
  googleId: String!
  email: String!
  firstName: String!
  lastName: String!
  authorized: Boolean!
  settings: Settings
  links: [Link] @relation
}

type Query {
  findLinksByOwner(owner: ID!): [Link!] @resolver(name: "links_by_owner", paginated: true)
  findActiveLinksByOwner(owner: ID!): [Link!] @resolver(name: "active_links_by_owner", paginated: true)
  findLinksByTitle(owner: ID!, title: String!): [Link] @resolver(name: "links_by_title", paginated: true)
  findLinksByDestination(owner: ID!, destination: String!): [Link] @resolver(name: "links_by_destination", paginated: true)

  clickCountByOwner(owner: ID!): Int @resolver(name: "click_count_by_owner")
  findClicksByOwner(owner: ID!): [Click!] @resolver(name: "clicks_by_owner", paginated: true)

  findUserByGoogleId(googleId: String!): User
  findAuthorizedUser(googleId: String!, authorized: Boolean!): User

  findSettingsBySlug(slug: String!): Settings
}

type Mutation {
  softDeleteLink(id: ID!): Link! @resolver(name: "delete_link")
  toggleActiveLink(id: ID!, active: Boolean!): Link! @resolver(name: "toggle_active_link")
}
